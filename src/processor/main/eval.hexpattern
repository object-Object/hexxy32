#include "../../macros/bytes.hexpattern"
#include "../../macros/exceptions.hexpattern"
#include "../../macros/heaps.hexpattern"
#include "../../macros/memory.hexpattern"
#include "../../macros/registers.hexpattern"
#include "../../types/hexcasting.hexpattern"

{
    Set Breakpoint After

    // get program counter and save tentative next program counter
    Muninn's Reflection
    Gemini Decomposition
    Numerical Reflection: 32
    Selection Distillation

    Undertaker's Gambit
    Numerical Reflection: 4
    Additive Distillation

    Numerical Reflection: 33
    Jester's Gambit
    Surgeon's Exaltation
    Huginn's Gambit

    // load instruction
    Load Word
    Swap Endianness

    // [opcode]
    Gemini Decomposition
    Numerical Reflection: 7
    Truncate Integer
    Single's Purification
    
    // [opcode, funct3]
    Dioscuri Gambit
    Prospector's Gambit
    Numerical Reflection: 14
    Numerical Reflection: 12
    Slice Integer
    Integration Distillation
    
    // [opcode, funct3, funct7]
    Gemini Decomposition
    Rotation Gambit
    Numerical Reflection: 25
    Logical Shift Right
    Integration Distillation

    // resolve instruction index
    Numerical Reflection: 3
    Flock's Gambit

    {
        // table 1: instruction lookup
        // [[opcode, funct3?, funct7?], ...]
        <[[55], [23], [111], [103, 0], ..., [19, 1, 0], ..., [15, 0], [115, 0]]>
    }
    Flock's Disintegration

    {
        Locator's Distillation

        // break if index > -1
        Gemini Decomposition
        Numerical Reflection: -1
        Maximus Distillation
        {
            Charon's Gambit
            Bookkeeper's Gambit: -
        }
        Flock's Disintegration
        Augur's Exaltation
        Hermes' Gambit
    }
    Rotation Gambit
    Thoth's Gambit
    Derivation Decomposition
    Bookkeeper's Gambit: vv-

    // continue executing if instruction is valid
    // otherwise raise an exception
    Gemini Decomposition
    Numerical Reflection: -1
    Maximus Distillation
    {
        // get instruction type decoder
        {
            Bookkeeper's Gambit: -- // bootstrap injection target
        }
        Flock's Disintegration
        Ritualist's Purification
        Prospector's Gambit

        {
            // table 2: instruction index -> decoder index
            // [decoder, ...]
            <[4, 4, 5, 1, 3, ...]>
        }
        Flock's Disintegration

        Jester's Gambit
        Selection Distillation
        Selection Distillation
        
        // get instruction handler
        {
            Bookkeeper's Gambit: --- // bootstrap injection target for lower instruction focus location
        }
        Flock's Disintegration

        // if the instruction index is greater than 19, it's stored in the next focus up due to stack size limits
        Rotation Gambit
        Undertaker's Gambit
        Numerical Reflection: 19
        Maximus Distillation
        Vector Reflection +Y
        Vector Reflection Zero
        Augur's Exaltation
        Additive Distillation

        Ritualist's Purification
        Jester's Gambit
        Selection Distillation
        
        // decode and execute instruction
        {
            Set Breakpoint After // break after decoding
        }
        Jester's Gambit
        Additive Distillation
        Additive Distillation
        Set Breakpoint After
        Hermes' Gambit
    }
    {
        Bookkeeper's Gambit: v
        {
            <"Attempted to execute illegal instruction.">
            <"Instruction:">
        }
        Jester's Gambit
        Integration Distillation
        Raise Exception: Fatal
    }
    Augur's Exaltation
    Hermes' Gambit

    // handle traps
    Numerical Reflection: 34
    Read Register
    Gemini Decomposition
    Augur's Purification
    {
        // if falsy
        Bookkeeper's Gambit: v

        // if truthy
        // load and execute trap handler
        Speaker's Decomposition
        {
            Bookkeeper's Gambit: ---- // bootstrap injection target (trap handlers)
        }
        Flock's Disintegration
        Ritualist's Purification
        Jester's Gambit
        Selection Distillation
        Set Breakpoint After
        Hermes' Gambit

        // reset the trap register
        Numerical Reflection: 34
        Numerical Reflection: 0
        Write Register
    }
    Speaker's Decomposition
    Augur's Exaltation
    Hermes' Gambit

    // update program counter
    Muninn's Reflection
    Numerical Reflection: 32
    Prospector's Gambit
    Numerical Reflection: 33
    Selection Distillation
    Surgeon's Exaltation
    Huginn's Gambit
}
