#include "../types/hexcasting.hexpattern"
#include "../macros/memory.hexpattern"

#define Syscall 0: Halt = num, num, num, num, num, num, num ->
// exit code, ... ->
{
    Bookkeeper's Gambit: vvvvvv

    {
        <"Halt syscall executed. The processor will now terminate.">
        <"Exit code:">
    }
    Jester's Gambit
    Integration Distillation
    
    {
        Reveal
    }
    Jester's Gambit
    Thoth's Gambit

    // mishap to stop execution
    {
        <"Terminating execution.">
    }
    Hermes' Gambit
}

#define Syscall 1: Print String = num, num, num, num, num, num, num ->
// address, length, ... ->
// TODO: this could be *way* more efficient (ie. read a page of memory and reuse it until we need the next one)
{
    Bookkeeper's Gambit: vvvvv
    Blank Reflection

    {
        // break if we've printed the entire string
        Rotation Gambit
        Dioscuri Gambit
        Augur's Purification
        Vacant Reflection
        Rotation Gambit
        Augur's Exaltation
        Hermes' Gambit
        
        // length -= 1
        Numerical Reflection: 1
        Subtractive Distillation
        Rotation Gambit II
        
        // address += 1
        Numerical Reflection: 3
        Fisherman's Gambit
        Gemini Decomposition
        Numerical Reflection: 1
        Additive Distillation
        Numerical Reflection: -4
        Fisherman's Gambit
        
        // load and append the current character to the string
        Rotation Gambit
        {
            // ASCII lookup table
            // copy the next line, split on ¦, replace index 10 with a newline using Breaking Reflection
            // ¦¦¦¦¦¦¦¦¦ ¦\n¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ ¦!¦"¦#¦$¦%¦&¦'¦(¦)¦*¦+¦,¦-¦.¦/¦0¦1¦2¦3¦4¦5¦6¦7¦8¦9¦:¦;¦<¦=¦>¦?¦@¦A¦B¦C¦D¦E¦F¦G¦H¦I¦J¦K¦L¦M¦N¦O¦P¦Q¦R¦S¦T¦U¦V¦W¦X¦Y¦Z¦[¦\¦]¦^¦_¦`¦a¦b¦c¦d¦e¦f¦g¦h¦i¦j¦k¦l¦m¦n¦o¦p¦q¦r¦s¦t¦u¦v¦w¦x¦y¦z¦{¦|¦}¦~¦
            // alternatively, use this one to replace all non-printing characters with ?
            // ?¦?¦?¦?¦?¦?¦?¦?¦?¦ ¦\n¦?¦?¦?¦?¦?¦?¦?¦?¦?¦?¦?¦?¦?¦?¦?¦?¦?¦?¦?¦?¦?¦ ¦!¦"¦#¦$¦%¦&¦'¦(¦)¦*¦+¦,¦-¦.¦/¦0¦1¦2¦3¦4¦5¦6¦7¦8¦9¦:¦;¦<¦=¦>¦?¦@¦A¦B¦C¦D¦E¦F¦G¦H¦I¦J¦K¦L¦M¦N¦O¦P¦Q¦R¦S¦T¦U¦V¦W¦X¦Y¦Z¦[¦\¦]¦^¦_¦`¦a¦b¦c¦d¦e¦f¦g¦h¦i¦j¦k¦l¦m¦n¦o¦p¦q¦r¦s¦t¦u¦v¦w¦x¦y¦z¦{¦|¦}¦~¦?
            <["", ..., " ", "\n", ..., " ", "!", ...]>
        }
        Flock's Disintegration

        // if the byte is outside of the ascii range, print "?" instead
        Rotation Gambit
        Load Byte

        Gemini Decomposition
        Numerical Reflection: 128
        Minimus Distillation
        Jester's Gambit
        Numerical Reflection: 63 // ?
        Augur's Exaltation

        Selection Distillation
        Additive Distillation
        
        // recurse
        Jester's Gambit
        Numerical Reflection: 4
        Fisherman's Gambit II
        Hermes' Gambit
    }
    Numerical Reflection: -3
    Fisherman's Gambit II
    Iris' Gambit

    Bookkeeper's Gambit: vv-vv
    Reveal
    Bookkeeper's Gambit: v
}
