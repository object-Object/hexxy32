// https://github.com/object-Object/hex-hexes/blob/80fce420b431/macros/Heaps.hexpattern (with modifications)

#include "../types/hexcasting.hexpattern"

#define Encyclopedist's Exaltation (EAST aqqqqqeqaqqqqq) = int, int, vec -> any
// address, heap size, heap location -> value
// reads a value from an address in the heap
{
    Encyclopedist's Assistant
    Ritualist's Purification
    Jester's Gambit
    Selection Distillation
}

#define Encyclopedist's Gambit (EAST deeeeeqqaqqqqq) = any, int, int, vec ->
// value, address, heap size, heap location ->
// writes a value to an address in the heap
// will mishap if writing to an orphaned index (no adjacent iotas)
// but this is fine here since we expect all memory to contain numbers at all times
{
    Encyclopedist's Assistant
    Undertaker's Gambit
    Ritualist's Purification

    Jester's Gambit
    Numerical Reflection: 3
    Fisherman's Gambit
    Surgeon's Exaltation

    Ritualist's Gambit
}

#define Encyclopedist's Assistant (NORTH_EAST eeqaqqqqqdqqqqqaqee) = int, int, vec -> int, vec
// address, heap size, heap location -> index, focus
// internal helper macro
{
    // index in focus
    Jester's Gambit
    Rotation Gambit
    // max size of a focus
    // technically each focus could store up to 1022 iotas
    // but this is more convenient for dividing up into chunks, and avoids having to worry about stack size issues
    Numerical Reflection: 512
    Dioscuri Gambit
    Modulus Distillation
    Rotation Gambit II
    
    // index in heap
    Undertaker's Gambit
    Division Distillation
    Floor Purification
    Jester's Gambit
    Modulus Distillation

    // focus holder pos
    Rotation Gambit
    Cubic Index Distillation
    Rotation Gambit
    Additive Distillation
}

#define Locate Heap (SOUTH_EAST qaqqqqqewdedqde) = int -> vec
// heap size -> heap position
// returns the position of a heap centered on the player's sentinel
{
    Locate Sentinel
    Jester's Gambit
    Numerical Reflection: 2
    Division Distillation
    Floor Purification
    Subtractive Distillation
}

#define Summon Heap Sentinel = int, vec ->
// heap size, heap position ->
// summon a sentinel at the center of the given heap
{
    Jester's Gambit
    Numerical Reflection: 2
    Division Distillation
    Floor Purification
    Additive Distillation
    Summon Greater Sentinel
}

#define Cubic Index Distillation (EAST qaqqqqqdeee) = int, int -> vec
// index, size -> coord
// iterates x+, then z+, then y+
{
    // x
    Dioscuri Gambit
    Modulus Distillation
    Rotation Gambit II
    
    // z
    Dioscuri Gambit
    Undertaker's Gambit
    Division Distillation
    Floor Purification
    Jester's Gambit
    Modulus Distillation
    Rotation Gambit II
    
    // y
    Gemini Decomposition
    Multiplicative Distillation
    Division Distillation
    Floor Purification

    Jester's Gambit
    Vector Exaltation
}
