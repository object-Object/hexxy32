#include "../macros/registers.hexpattern"
#include "../types/hexcasting.hexpattern"

// run processor indefinitely
{
    // get processor position
    Mind's Reflection
    Compass' Purification
    Mind's Reflection
    Alidade's Purification
    Archer's Distillation
    Gemini Decomposition

    // if sneaking, reset processor state
    Mind's Reflection
    Stadiometer's Purification
    Numerical Reflection: 1.5
    Maximus Distillation
    Vacant Reflection
    {
        Gemini Decomposition
        Vector Reflection -Y
        Additive Distillation
        Nullary Reflection
        Ritualist's Gambit
    }
    Augur's Exaltation
    Hermes' Gambit
    
    // bootstrap processor code
    Gemini Decomposition
    Vector Reflection +Y
    Additive Distillation
    Ritualist's Purification
    Flock's Disintegration
    Hermes' Gambit

    // wrap eval in iris to run many instructions per tick
    {
        Vacant Reflection
        Iris' Gambit
    }
    Jester's Gambit
    Additive Distillation
    {
        // run another instruction if we have more than 10^4 ops remaining
        Thanatos' Reflection
        Numerical Reflection: 10
        Numerical Reflection: 4
        Power Distillation
        Maximus Distillation

        // but only if the exit flag isn't set
        Muninn's Reflection
        Numerical Reflection: 35
        Selection Distillation
        Numerical Reflection: 0
        Equality Distillation
        Conjunction Distillation

        Prospector's Gambit
        {
            Bookkeeper's Gambit: v
        }
        Augur's Exaltation
        Hermes' Gambit
    }
    Additive Distillation

    // wisp loop: run startup, then evals, then shutdown
    Jester's Gambit
    Additive Distillation
    Additive Distillation
    
    // summon wisp
    Jester's Gambit
    Numerical Reflection: 100 // media
    Summon Cyclic Wisp
}
